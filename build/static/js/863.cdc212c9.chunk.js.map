{"version":3,"file":"static/js/863.cdc212c9.chunk.js","mappings":"sLAuMA,OACEA,OAzJF,SACEC,EACAC,EACAC,EACAC,GAEA,IAAMC,EAAQJ,EAAaK,iCAC3B,GAAc,IAAVD,EACF,MAAM,IAAIE,MACR,+EAIJ,IAAMC,EAAaP,EAAaQ,OAAON,EAAKO,YAC5CR,EAAOS,IAAI,IAAIC,WAAWT,GAAOK,GAGjC,IAAMK,EAAOZ,EAAaa,eACxBN,EACAL,EAAKO,WACL,EACA,EACA,GAEIK,EAAOd,EAAae,eAAeH,EAAM,GAC/CZ,EAAagB,gBAAgBJ,GAG7B,IAAMK,EAAiBjB,EAAakB,oBAClCd,EACA,GAEFJ,EAAamB,aAAaF,GAC1BjB,EAAaoB,cAAcH,GAoB3B,IAC0BI,EAuDtBtB,EAxDEuB,EAAgBtB,EAAauB,4BAA4BnB,GAAOoB,ECnGzD,SAAoCC,EAAGC,GACpD,IAAIC,EAAuB,qBAAXC,QAA0BH,EAAEG,OAAOC,WAAaJ,EAAE,cAClE,IAAKE,EAAI,CACP,GAAIG,MAAMC,QAAQN,KAAOE,GAAK,EAAAK,EAAA,GAA2BP,KAAOC,GAAkBD,GAAyB,kBAAbA,EAAEQ,OAAqB,CAC/GN,IAAIF,EAAIE,GACZ,IAAIO,EAAI,EACJC,EAAI,WAAc,EACtB,MAAO,CACLC,EAAGD,EACHE,EAAG,WACD,OAAIH,GAAKT,EAAEQ,OAAe,CACxBK,MAAM,GAED,CACLA,MAAM,EACNC,MAAOd,EAAES,KAEb,EACAM,EAAG,SAAWC,GACZ,MAAMA,CACR,EACAC,EAAGP,EAEP,CACA,MAAM,IAAIQ,UAAU,wIACtB,CACA,IAEEC,EAFEC,GAAmB,EACrBC,GAAS,EAEX,MAAO,CACLV,EAAG,WACDT,EAAKA,EAAGoB,KAAKtB,EACf,EACAY,EAAG,WACD,IAAIW,EAAOrB,EAAGsB,OAEd,OADAJ,EAAmBG,EAAKV,KACjBU,CACT,EACAR,EAAG,SAAWU,GACZJ,GAAS,EACTF,EAAMM,CACR,EACAR,EAAG,WACD,IACOG,GAAoC,MAAhBlB,EAAW,QAAWA,EAAW,QAC5D,CAAE,QACA,GAAImB,EAAQ,MAAMF,CACpB,CACF,EAEJ,CDiDwEO,CACtDhD,GAAU,IAA1B,IAAAqB,EAAAY,MAAAf,EAAAG,EAAAa,KAAAC,MAA4B,CAAC,IAAlBc,EAAC/B,EAAAkB,MACVvC,EAAaqD,WAAW/B,EAAe8B,EACzC,CAmDA,OAAAR,GAAApB,EAAAgB,EAAAI,EAAA,SAAApB,EAAAkB,GAAA,CAGA,IAEE,GAAe,KADf3C,EAASC,EAAasD,kBAAkBxC,EAAMV,IAI5C,MAFAJ,EAAauD,gBAAgBzC,GAC7Bd,EAAawD,KAAKjD,GACZ,IAAID,MACR,qGAGN,CAAC,QAECN,EAAayD,wBAAwBrD,EACvC,CAGA,IAAMsD,EAAS1D,EAAa2D,uBAAuB5D,GAE7C6D,EAAS5D,EAAa6D,iBAAiBH,EAAQ,GAC/CI,EAAmB9D,EAAa+D,mBAAmBL,GACzD,GAAyB,IAArBI,EAKF,MAJA9D,EAAagB,gBAAgB0C,GAC7B1D,EAAauD,gBAAgBxD,GAC7BC,EAAauD,gBAAgBzC,GAC7Bd,EAAawD,KAAKjD,GACZ,IAAID,MACR,oEAIJ,IAAM0D,EAAa,IAAIrD,WACrBV,EAAOgE,SAASL,EAAQA,EAASE,IASnC,OALA9D,EAAagB,gBAAgB0C,GAC7B1D,EAAauD,gBAAgBxD,GAC7BC,EAAauD,gBAAgBzC,GAC7Bd,EAAawD,KAAKjD,GAEXyD,CACT,E","sources":["wasm/hb-subset.bindings.ts","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["/**\r\n * Modified version of hb-subset bindings from \"subset-font\" package https://github.com/papandreou/subset-font/blob/3f711c8aa29a426c7f22655861abfb976950f527/index.js\r\n * \r\n * CHANGELOG:\r\n * - removed dependency on node APIs to work inside the browser\r\n * - removed dependency on font fontverter for brotli compression\r\n * - removed dependencies on lodash and p-limit\r\n * - removed options for preserveNameIds, variationAxes, noLayoutClosure (not needed for now)\r\n * - replaced text input with codepoints\r\n * - rewritten in typescript and with esm modules\r\n\r\nCopyright (c) 2012, Andreas Lind Petersen\r\nAll rights reserved.\r\n\r\nRedistribution and use in source and binary forms, with or without\r\nmodification, are permitted provided that the following conditions are\r\nmet:\r\n\r\n  * Redistributions of source code must retain the above copyright\r\n    notice, this list of conditions and the following disclaimer.\r\n  * Redistributions in binary form must reproduce the above copyright\r\n    notice, this list of conditions and the following disclaimer in\r\n    the documentation and/or other materials provided with the\r\n    distribution.\r\n  * Neither the name of the author nor the names of contributors may\r\n    be used to endorse or promote products derived from this\r\n    software without specific prior written permission.\r\n\r\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\r\nIS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED\r\nTO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\r\nPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\r\nHOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n// function HB_TAG(str) {\r\n//   return str.split(\"\").reduce((a, ch) => {\r\n//     return (a << 8) + ch.charCodeAt(0);\r\n//   }, 0);\r\n// }\r\n\r\nfunction subset(\r\n  hbSubsetWasm: any,\r\n  heapu8: Uint8Array,\r\n  font: ArrayBuffer,\r\n  codePoints: ReadonlySet<number>,\r\n) {\r\n  const input = hbSubsetWasm.hb_subset_input_create_or_fail();\r\n  if (input === 0) {\r\n    throw new Error(\r\n      \"hb_subset_input_create_or_fail (harfbuzz) returned zero, indicating failure\",\r\n    );\r\n  }\r\n\r\n  const fontBuffer = hbSubsetWasm.malloc(font.byteLength);\r\n  heapu8.set(new Uint8Array(font), fontBuffer);\r\n\r\n  // Create the face\r\n  const blob = hbSubsetWasm.hb_blob_create(\r\n    fontBuffer,\r\n    font.byteLength,\r\n    2, // HB_MEMORY_MODE_WRITABLE\r\n    0,\r\n    0,\r\n  );\r\n  const face = hbSubsetWasm.hb_face_create(blob, 0);\r\n  hbSubsetWasm.hb_blob_destroy(blob);\r\n\r\n  // Do the equivalent of --font-features=*\r\n  const layoutFeatures = hbSubsetWasm.hb_subset_input_set(\r\n    input,\r\n    6, // HB_SUBSET_SETS_LAYOUT_FEATURE_TAG\r\n  );\r\n  hbSubsetWasm.hb_set_clear(layoutFeatures);\r\n  hbSubsetWasm.hb_set_invert(layoutFeatures);\r\n\r\n  // if (preserveNameIds) {\r\n  //   const inputNameIds = harfbuzzJsWasm.hb_subset_input_set(\r\n  //     input,\r\n  //     4, // HB_SUBSET_SETS_NAME_ID\r\n  //   );\r\n  //   for (const nameId of preserveNameIds) {\r\n  //     harfbuzzJsWasm.hb_set_add(inputNameIds, nameId);\r\n  //   }\r\n  // }\r\n\r\n  // if (noLayoutClosure) {\r\n  //   harfbuzzJsWasm.hb_subset_input_set_flags(\r\n  //     input,\r\n  //     harfbuzzJsWasm.hb_subset_input_get_flags(input) | 0x00000200, // HB_SUBSET_FLAGS_NO_LAYOUT_CLOSURE\r\n  //   );\r\n  // }\r\n\r\n  // Add unicodes indices\r\n  const inputUnicodes = hbSubsetWasm.hb_subset_input_unicode_set(input);\r\n  for (const c of codePoints) {\r\n    hbSubsetWasm.hb_set_add(inputUnicodes, c);\r\n  }\r\n\r\n  // if (variationAxes) {\r\n  //   for (const [axisName, value] of Object.entries(variationAxes)) {\r\n  //     if (typeof value === \"number\") {\r\n  //       // Simple case: Pin/instance the variation axis to a single value\r\n  //       if (\r\n  //         !harfbuzzJsWasm.hb_subset_input_pin_axis_location(\r\n  //           input,\r\n  //           face,\r\n  //           HB_TAG(axisName),\r\n  //           value,\r\n  //         )\r\n  //       ) {\r\n  //         harfbuzzJsWasm.hb_face_destroy(face);\r\n  //         harfbuzzJsWasm.free(fontBuffer);\r\n  //         throw new Error(\r\n  //           `hb_subset_input_pin_axis_location (harfbuzz) returned zero when pinning ${axisName} to ${value}, indicating failure. Maybe the axis does not exist in the font?`,\r\n  //         );\r\n  //       }\r\n  //     } else if (value && typeof value === \"object\") {\r\n  //       // Complex case: Reduce the variation space of the axis\r\n  //       if (\r\n  //         typeof value.min === \"undefined\" ||\r\n  //         typeof value.max === \"undefined\"\r\n  //       ) {\r\n  //         harfbuzzJsWasm.hb_face_destroy(face);\r\n  //         harfbuzzJsWasm.free(fontBuffer);\r\n  //         throw new Error(\r\n  //           `${axisName}: You must provide both a min and a max value when setting the axis range`,\r\n  //         );\r\n  //       }\r\n  //       if (\r\n  //         !harfbuzzJsWasm.hb_subset_input_set_axis_range(\r\n  //           input,\r\n  //           face,\r\n  //           HB_TAG(axisName),\r\n  //           value.min,\r\n  //           value.max,\r\n  //           // An explicit NaN makes harfbuzz use the existing default value, clamping to the new range if necessary\r\n  //           value.default ?? NaN,\r\n  //         )\r\n  //       ) {\r\n  //         harfbuzzJsWasm.hb_face_destroy(face);\r\n  //         harfbuzzJsWasm.free(fontBuffer);\r\n  //         throw new Error(\r\n  //           `hb_subset_input_set_axis_range (harfbuzz) returned zero when setting the range of ${axisName} to [${value.min}; ${value.max}] and a default value of ${value.default}, indicating failure. Maybe the axis does not exist in the font?`,\r\n  //         );\r\n  //       }\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  let subset;\r\n  try {\r\n    subset = hbSubsetWasm.hb_subset_or_fail(face, input);\r\n    if (subset === 0) {\r\n      hbSubsetWasm.hb_face_destroy(face);\r\n      hbSubsetWasm.free(fontBuffer);\r\n      throw new Error(\r\n        \"hb_subset_or_fail (harfbuzz) returned zero, indicating failure. Maybe the input file is corrupted?\",\r\n      );\r\n    }\r\n  } finally {\r\n    // Clean up\r\n    hbSubsetWasm.hb_subset_input_destroy(input);\r\n  }\r\n\r\n  // Get result blob\r\n  const result = hbSubsetWasm.hb_face_reference_blob(subset);\r\n\r\n  const offset = hbSubsetWasm.hb_blob_get_data(result, 0);\r\n  const subsetByteLength = hbSubsetWasm.hb_blob_get_length(result);\r\n  if (subsetByteLength === 0) {\r\n    hbSubsetWasm.hb_blob_destroy(result);\r\n    hbSubsetWasm.hb_face_destroy(subset);\r\n    hbSubsetWasm.hb_face_destroy(face);\r\n    hbSubsetWasm.free(fontBuffer);\r\n    throw new Error(\r\n      \"Failed to create subset font, maybe the input file is corrupted?\",\r\n    );\r\n  }\r\n\r\n  const subsetFont = new Uint8Array(\r\n    heapu8.subarray(offset, offset + subsetByteLength),\r\n  );\r\n\r\n  // Clean up\r\n  hbSubsetWasm.hb_blob_destroy(result);\r\n  hbSubsetWasm.hb_face_destroy(subset);\r\n  hbSubsetWasm.hb_face_destroy(face);\r\n  hbSubsetWasm.free(fontBuffer);\r\n\r\n  return subsetFont;\r\n}\r\n\r\nexport default {\r\n  subset,\r\n};\r\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["subset","hbSubsetWasm","heapu8","font","codePoints","input","hb_subset_input_create_or_fail","Error","fontBuffer","malloc","byteLength","set","Uint8Array","blob","hb_blob_create","face","hb_face_create","hb_blob_destroy","layoutFeatures","hb_subset_input_set","hb_set_clear","hb_set_invert","_step","inputUnicodes","hb_subset_input_unicode_set","_iterator","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","_createForOfIteratorHelper","c","hb_set_add","hb_subset_or_fail","hb_face_destroy","free","hb_subset_input_destroy","result","hb_face_reference_blob","offset","hb_blob_get_data","subsetByteLength","hb_blob_get_length","subsetFont","subarray"],"sourceRoot":""}